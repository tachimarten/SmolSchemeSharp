// SmolScheme/R5RSLibrary.cs
//
// The `(scheme r5rs)` library, as defined in R‚Å∑RS Appendix A.

using System;
using System.Collections;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Numerics;
using System.Reflection;
using System.Text;
using System.Threading.Tasks;

namespace SmolScheme {
    public static class R5RSLibrary {
        public static Library Create(IEnumerable<Library> sourceLibraries) {
            Dictionary<string, Def> defs = new Dictionary<string, Def>();
            foreach (Library sourceLibrary in sourceLibraries) {
                foreach (KeyValuePair<string, Def> pair in sourceLibrary.Exports) {
                    if (Identifiers.Contains(pair.Key))
                        defs.Add(pair.Key, pair.Value);
                }
            }

            defs.Add("NullEnvironment", new ObjectDef(new NullEnvironmentProc()));
            defs.Add("SchemeReportEnvironment", new ObjectDef(new SchemeReportEnvironmentProc()));

            return new Library(defs);
        }

        private static readonly HashSet<string> Identifiers = new HashSet<string> {
            "*",
            "+",
            "-",
            "...",
            "/",
            "<",
            "<=",
            "=",
            "=>",
            ">",
            ">=",
            "Abs",
            "Acos",
            "And",
            "Angle",
            "Append",
            "Apply",
            "Asin",
            "Assoc",
            "Assq",
            "Assv",
            "Atan",
            "Begin",
            "Boolean?",
            "Caaaar",
            "Caaadr",
            "Caaar",
            "Caadar",
            "Caaddr",
            "Caadr",
            "Caar",
            "Cadaar",
            "Cadadr",
            "Cadar",
            "Caddar",
            "Cadddr",
            "Caddr",
            "Cadr",
            "CallWithCurrentContinuation",
            "CallWithInputFile",
            "CallWithOutputFile",
            "CallWithValues",
            "Car",
            "Case",
            "Cdaaar",
            "Cdaadr",
            "Cdaar",
            "Cdadar",
            "Cdaddr",
            "Cdadr",
            "Cdar",
            "Cddaar",
            "Cddadr",
            "Cddar",
            "Cdddar",
            "Cddddr",
            "Cdddr",
            "Cddr",
            "Cdr",
            "Ceiling",
            "Char->Integer",
            "CharAlphabetic?",
            "CharCi<=?",
            "CharCi<?",
            "CharCi=?",
            "CharCi>=?",
            "CharCi>?",
            "CharDowncase",
            "CharLowerCase?",
            "CharNumeric?",
            "CharReady?",
            "CharUpcase",
            "CharUpperCase?",
            "CharWhitespace?",
            "Char<=?",
            "Char<?",
            "Char=?",
            "Char>=?",
            "Char>?",
            "Char?",
            "CloseInputPort",
            "CloseOutputPort",
            "Complex?",
            "Cond",
            "Cons",
            "Cos",
            "CurrentInputPort",
            "CurrentOutputPort",
            "Define",
            "DefineSyntax",
            "Delay",
            "Denominator",
            "Display",
            "Do",
            "DynamicWind",
            "Else",
            "EofObject?",
            "Eq?",
            "Equal?",
            "Eqv?",
            "Eval",
            "Even?",
            "Exact->Inexact",
            "Exact?",
            "Exp",
            "Expt",
            "Floor",
            "ForEach",
            "Force",
            "Gcd",
            "If",
            "ImagPart",
            "Inexact->Exact",
            "Inexact?",
            "InputPort?",
            "Integer->Char",
            "Integer?",
            "InteractionEnvironment",
            "Lambda",
            "Lcm",
            "Length",
            "Let",
            "Let*",
            "LetSyntax",
            "Letrec",
            "LetrecSyntax",
            "List",
            "List->String",
            "List->Vector",
            "ListRef",
            "ListTail",
            "List?",
            "Load",
            "Log",
            "Magnitude",
            "MakePolar",
            "MakeRectangular",
            "MakeString",
            "MakeVector",
            "Map",
            "Max",
            "Member",
            "Memq",
            "Memv",
            "Min",
            "Modulo",
            "Negative?",
            "Newline",
            "Not",
            "NullEnvironment",
            "Null?",
            "Number->String",
            "Number?",
            "Numerator",
            "Odd?",
            "OpenInputFile",
            "OpenOutputFile",
            "Or",
            "OutputPort?",
            "Pair?",
            "PeekChar",
            "Positive?",
            "Procedure?",
            "Quasiquote",
            "Quote",
            "Quotient",
            "Rational?",
            "Rationalize",
            "Read",
            "ReadChar",
            "RealPart",
            "Real?",
            "Remainder",
            "Reverse",
            "Round",
            "SchemeReportEnvironment",
            "Set!",
            "SetCar!",
            "SetCdr!",
            "Sin",
            "Sqrt",
            "String",
            "String->List",
            "String->Number",
            "String->Symbol",
            "StringAppend",
            "StringCi<=?",
            "StringCi<?",
            "StringCi=?",
            "StringCi>=?",
            "StringCi>?",
            "StringCopy",
            "StringFill!",
            "StringLength",
            "StringRef",
            "StringSet!",
            "String<=?",
            "String<?",
            "String=?",
            "String>=?",
            "String>?",
            "String?",
            "Substring",
            "Symbol->String",
            "Symbol?",
            "SyntaxRules",
            "Tan",
            "Truncate",
            "Values",
            "Vector",
            "Vector->List",
            "VectorFill!",
            "VectorLength",
            "VectorRef",
            "VectorSet!",
            "Vector?",
            "WithInputFromFile",
            "WithOutputToFile",
            "Write",
            "WriteChar",
            "Zero?",
        };
    }
}
